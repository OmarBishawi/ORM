from books_authors_app.models import Book, Author, BookAuthor

# Create 5 books
book_titles = ['C Sharp', 'Java', 'Python', 'PHP', 'Ruby']
books = [Book.objects.create(title=title, desc=f'Description for {title}') for title in book_titles]

# Create 5 authors
author_names = [('Jane', 'Austen'), ('Emily', 'Dickinson'), ('Fyodor', 'Dostoevsky'), ('William', 'Shakespeare'), ('Lao', 'Tzu')]
authors = [Author.objects.create(first_name=first_name, last_name=last_name) for first_name, last_name in author_names]

# Save the queries to a .txt file
queries = [
    f"INSERT INTO books (title, desc) VALUES ('{title}', 'Description for {title}');" for title in book_titles
] + [
    f"INSERT INTO authors (first_name, last_name) VALUES ('{first_name}', '{last_name}');" for first_name, last_name in author_names
]

with open('queries.txt', 'w') as f:
    for query in queries:
        f.write(query + '\n')



from books_authors_app.models import Book, Author, BookAuthor

# Change the name of the C Sharp book to C#
book = Book.objects.get(title='C Sharp')
book.title = 'C#'
book.save()

# Change the first name of the 4th author to Bill
author = Author.objects.get(last_name='Shakespeare')
author.first_name = 'Bill'
author.save()

# Assign the first author to the first 2 books
BookAuthor.objects.create(book=books[0], author=authors[0])
BookAuthor.objects.create(book=books[1], author=authors[0])

# Assign the second author to the first 3 books
BookAuthor.objects.create(book=books[0], author=authors[1])
BookAuthor.objects.create(book=books[1], author=authors[1])
BookAuthor.objects.create(book=books[2], author=authors[1])

# Assign the third author to the first 4 books
BookAuthor.objects.create(book=books[0], author=authors[2])
BookAuthor.objects.create(book=books[1], author=authors[2])
BookAuthor.objects.create(book=books[2], author=authors[2])
BookAuthor.objects.create(book=books[3], author=authors[2])

# Assign the fourth author to the first 5 books
for book in books:
    BookAuthor.objects.create(book=book, author=authors[3])

# Retrieve all the authors for the 3rd book
third_book_authors = books[2].bookauthor_set.all()

# Remove the first author of the 3rd book
BookAuthor.objects.filter(book=books[2], author=authors[0]).delete()

# Add the 5th author as one of the authors of the 2nd book
BookAuthor.objects.create(book=books[1], author=authors[4])

# Find all the books that the 3rd author is part of
third_author_books = authors[2].bookauthor_set.all()

# Find all the authors that contributed to the 5th book
fifth_book_authors = books[4].bookauthor_set.all()

# Save these queries to the .txt file
additional_queries = [
    "UPDATE books SET title = 'C#' WHERE title = 'C Sharp';",
    "UPDATE authors SET first_name = 'Bill' WHERE last_name = 'Shakespeare';",
    "INSERT INTO books_authors (book_id, author_id) VALUES (1, 1), (2, 1);",
    "INSERT INTO books_authors (book_id, author_id) VALUES (1, 2), (2, 2), (3, 2);",
    "INSERT INTO books_authors (book_id, author_id) VALUES (1, 3), (2, 3), (3, 3), (4, 3);",
    "INSERT INTO books_authors (book_id, author_id) VALUES (1, 4), (2, 4), (3, 4), (4, 4), (5, 4);",
    "SELECT * FROM authors WHERE id IN (SELECT author_id FROM books_authors WHERE book_id = 3);",
    "DELETE FROM books_authors WHERE book_id = 3 AND author_id = 1;",
    "INSERT INTO books_authors (book_id, author_id) VALUES (2, 5);",
    "SELECT * FROM books WHERE id IN (SELECT book_id FROM books_authors WHERE author_id = 3);",
    "SELECT * FROM authors WHERE id IN (SELECT author_id FROM books_authors WHERE book_id = 5);"
]

with open('queries.txt', 'a') as f:
    for query in additional_queries:
        f.write(query + '\n')

